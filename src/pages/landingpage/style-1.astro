---
import ChevronRight from "@components/icons/ChevronRight.astro";
import Feather from "@components/icons/Feather.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import ThreeLineMenu from "@components/icons/ThreeLineMenu.astro";
import X from "@components/icons/X.astro";
const navLinks = ["Home", "Post", "About", "Contact"];
---

<BaseLayout>
  <div
    class="flex min-h-screen w-full flex-col justify-between overflow-hidden"
    style={{
      background:
        "url(https://images.unsplash.com/photo-1701930873267-79a7a8730e70?q=80&w=1170&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D) no-repeat center center/cover",
    }}
  >
    <div
      class="relative flex h-full justify-center bg-black/40 px-10 py-16 text-white backdrop-blur-3xl md:px-16"
    >
      <div class="absolute top-0 h-full w-full md:hidden"></div>
      <div class="flex h-full max-w-7xl flex-col justify-between">
        <!-- NAVBAR START -->
        <div class="w-full">
          <nav class="inline-flex w-full items-center justify-between">
            <h3 class="inline-flex items-center gap-2 text-xl font-bold">
              <Feather />
               FeatherOne
            </h3>
            <!-- MENU START -->
            <span
              id="menuButton"
              class="relative z-30 cursor-pointer rounded-full text-3xl active:scale-95 md:hidden"
            >
              <ThreeLineMenu id="menuIcon" />
              <X id="closeIcon" class="hidden" />
            </span>
            <!-- RESPONSIVE VIEW MENU START -->
            <div
              id="responsiveMenu"
              class="absolute right-0 top-0 z-10 h-full w-96 translate-x-full bg-[#230F16] md:hidden"
            >
              <ul
                class="space-y-6 px-10 pt-32 text-4xl font-extrabold uppercase"
              >
                {
                  navLinks.map((n) => (
                    <li class="h-10 w-full overflow-hidden text-end">
                      <p class="navLinks translate-y-full">{n}</p>
                    </li>
                  ))
                }
              </ul>
            </div>
            <!-- RESPONSIVE VIEW MENU END -->
            <ul class="hidden gap-10 text-lg md:inline-flex">
              {
                navLinks.map((n) => (
                  <li class="group relative flex flex-col overflow-hidden">
                    <a href="#">{n}</a>
                    <span
                      id="link-uderline"
                      class="absolute bottom-0 right-0 w-full translate-x-full border-[1px] border-t border-white transition-transform duration-500 after:content-[''] group-hover:translate-x-0"
                    />
                  </li>
                ))
              }
            </ul>
            <!-- MENU END -->
          </nav>
        </div>
        <!-- NAVBAR END -->
        <!-- BODY TEXT START -->
        <div class="grid-cols-2 md:grid">
          <div class="space-y-4">
            <h1 class="text-4xl font-extrabold md:text-5xl">
              Where Dreams Find Flight, We Come In.
            </h1>
            <p class="text-lg">
              Where Dreams Take Wing. Explore limitless skies, Embrace boundless
              possibilities. Let aspirations soar high
            </p>
          </div>
          <div
            class="mt-10 flex flex-col items-end justify-end md:mt-0 md:inline-flex"
          >
            <span class="rounded-full bg-white p-3 text-black">
              <ChevronRight />
            </span>
          </div>
        </div>
        <!-- BODY TEXT END -->
      </div>
    </div>
  </div>
</BaseLayout>
<script>
  import { gsap } from "gsap";

  const menuIcon = document.getElementById("menuIcon")?.classList;
  const closeIcon = document.getElementById("closeIcon")?.classList;
  const sidebar = document.getElementById("responsiveMenu");

  const tl = gsap.timeline({ paused: true });
  tl.to(sidebar, { translateX: 0, duration: 0.4 }).to(".navLinks", {
    translateY: 0,
    duration: 0.4,
  });

  document.getElementById("menuButton")?.addEventListener("click", () => {
    if (closeIcon?.contains("hidden")) {
      closeIcon.remove("hidden");
      menuIcon?.add("hidden");
      tl.play();
    } else {
      closeIcon?.add("hidden");
      menuIcon?.remove("hidden");
      tl.reverse();
    }
  });
</script>
